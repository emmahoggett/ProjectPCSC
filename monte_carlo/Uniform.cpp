/*
 * Uniform.cpp
 *
 *  Created on: Nov 22, 2019
 * 	   Authors: Hoggett Emma <emma.hoggett@epfl.ch> &
 * 	            Vuillecard Pierre <pierre.vuillecard@epfl.ch>
 */

#include "Uniform.h"
#include <random>
#include <iostream>
#include <cmath>

// Constructor
Uniform :: Uniform(const double N) :mean_uniform(0.5) , var_uniform(1.0/12.0)
{


    std::random_device rd;  //Will be used to obtain a seed for the random number engine
    std::mt19937 gen(rd()); //Standard mersenne_twister_engine seeded with rd()
    std::uniform_real_distribution<> dis(0.0, 1.0);
    for (int n = 0; n < N; ++n) {
        // Use dis to transform the random unsigned int generated by gen into a
        // double in [0, 1). Each call to dis(gen) generates a new random double
        U_m.push_back(dis(gen));
    }
    m_size = N;
}

Uniform :: Uniform(double N, double a , double b ) : mean_uniform((a+b)/2.0) , var_uniform(pow(a+b,2)/12.0)
{

    try {
        set_interval(a,b);
    }
    catch (Error& err){
        err.PrintDebug();
        std::cout <<"Give alternative interval, the lower bound : \n";
        double new_a;
        std::cin >> new_a;
        double new_b;
        std::cin >> new_b;
        set_interval(new_a, new_b);
    }
    m_size = N;
    std::random_device rd;  //Will be used to obtain a seed for the random number engine
    std::mt19937 gen(rd()); //Standard mersenne_twister_engine seeded with rd()
    std::uniform_real_distribution<> dis(m_a, m_b);
    for (int n = 0; n < N; ++n) {
        // Use dis to transform the random unsigned int generated by gen into a
        // double in [0, 1). Each call to dis(gen) generates a new random double
        U_m.push_back(dis(gen));
    }

}




void Uniform::set_interval(const double a, const double b)
{
    if(b<a)
    {
        throw Error("INPUT", "The upper bound can't be less than the lower bound ");
    }
    else if(a==b)
    {
        throw Error("INPUT", "The lower bound can't be equal to the upper bound ");
    }
    else
    {
        m_a = a;
        m_b = b;
    }

}
